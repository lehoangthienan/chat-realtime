{"version":3,"sources":["config/index.js","screens/auth/constants/signin.js","screens/auth/reducers/signin.js","screens/auth/constants/signup.js","screens/auth/reducers/signup.js","screens/list_users/constants/list_user.js","screens/list_users/reducers/list_user.js","screens/chat/constants/list_chat.js","screens/chat/reducers/list_chat.js","reducers/index.js","myStore.js","utils/common.js","api/UserAPI.js","components/PrivateRoute.js","screens/auth/actions/signin.js","screens/auth/actions/signup.js","components/Alert.js","screens/auth/Auth.js","screens/list_users/actions/list_user.js","screens/list_users/ListUser.js","api/ChatAPI.js","screens/chat/actions/list_chat.js","screens/chat/chat.js","screens/dashboard/Dashboard.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api_url","START_LOGIN","LOGIN_SUCCESSFULL","LOGIN_FAIL","LOGIN_HANDLE_ERROR","initialState","startLogin","loginSuccessfull","error","START_SIGNUP","SIGNUP_SUCCESSFULL","SIGNUP_FAIL","SIGNUP_HANDLE_ERROR","startSignup","signupSuccessfull","REQUEST_LIST_USER","LIST_USER_FETCH_SUCCESSFULL","LIST_USER_FETCH_FAIL","LIST_USER_HANDLE_ERROR","isLoading","users","REQUEST_LIST_CHAT","LIST_CHAT_FETCH_SUCCESSFULL","LIST_CHAT_FETCH_FAIL","LIST_CHAT_HANDLE_ERROR","chats","combineReducers","loginData","state","arguments","length","undefined","action","type","Object","objectSpread","err","signupData","userData","chatData","logger","createLogger","timestamps","duration","myStore","createStore","rootReducer","compose","applyMiddleware","thunk","getHeaders","token","headers","Headers","Content-Type","Accept","getToken","append","KEY_TOKEN","sessionStorage","getItem","setToken","setItem","isLoggedIn","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","login","username","password","dispatch","Promise","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","wrap","_context","prev","next","abrupt","fetch","config","method","body","JSON","stringify","then","res","json","resJSON","status","message","result","localStorage","id","catch","stop","this","_x","_x2","apply","loginAPI","loginFail","signup","full_name","phone","_ref2","_callee2","_context2","user","_x3","_x4","signupAPI","signupFail","Transition","Slide_default","direction","Alert","open","handleClose","_this","setState","onClose","Dialog_default","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle_default","title","DialogContent_default","DialogContentText_default","children","DialogActions_default","Button_default","onClick","color","styles","container","display","justifyContent","alignItems","minHeight","backgroundColor","paper","width","padding","btnSignIn","margin","hr","height","border","textRight","textAlign","Auth","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tab","password1","password2","onClickLogin","bind","assertThisInitialized","onClickSignup","_this$state","alert","_this$state2","_this2","history","push","style","Paper_default","elevation","Typography_default","variant","align","TextField_default","label","value","onChange","e","target","fullWidth","disabled","cursor","Alert_Alert","handeErrorLogin","handeErrorSignup","toString","connect","getListUsers","_ref3","_callee3","_context3","_x5","_x6","fetchSuccessfully","ListUser","_this$props","classes","className","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","i","scope","Date","date_created","toDateString","withStyles","theme","marginTop","spacing","unit","overflowX","minWidth","getAllChat","getListChats","Chat","onFocus","socket","io","query","lastIDChat","chatsData","m","sender","match","params","userID","receiver","_id","emit","chat_id","console","log","text","seen","dataTemp","isSeen","content","chat","_created","now","preventDefault","on","response","_this3","renderMessage","marginLeft","onSubmit","placeholder","autofocus","Dashboard","onClickSignout","removeItem","window","reload","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","appBarMenuButton","Menu_default","appBarTitle","Drawer_default","drawer","toolbar","List_default","subheader","ListSubheader_default","ListItem_default","button","ListItemText_default","primary","Divider_default","Switch","exact","path","screens_chat_chat","key","zIndex","flexGrow","marginRight","flexShrink","mixins","Root","BrowserRouter","components_PrivateRoute","App","es","store","router","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd7c0ee2.chunk.js","sourcesContent":["const config = {\n     api_url: \"/api\",\n}\n\nmodule.exports = config","export const START_LOGIN = 'START_LOGIN'\nexport const LOGIN_SUCCESSFULL = 'LOGIN_SUCCESSFULL'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGIN_HANDLE_ERROR = 'LOGIN_HANDLE_ERROR'\n","import {START_LOGIN, LOGIN_SUCCESSFULL, LOGIN_HANDLE_ERROR, LOGIN_FAIL} from '../constants/signin.js'\n\nconst initialState = {\n    startLogin: false,\n    loginSuccessfull: false,\n    error: null\n}\n\nexport const loginData = (state = initialState, action) => {\n    switch(action.type){\n    case START_LOGIN:\n        return {\n            ...state,\n            startLogin: true\n        }\n    case LOGIN_SUCCESSFULL:\n        return {\n            ...state,\n            startLogin: false,\n            loginSuccessfull: true\n        }\n    case LOGIN_FAIL:\n        return {\n            ...state,\n            startLogin: false,\n            error: action.err\n        }\n    case LOGIN_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const START_SIGNUP = 'START_SIGNUP'\nexport const SIGNUP_SUCCESSFULL = 'SIGNUP_SUCCESSFULL'\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\nexport const SIGNUP_HANDLE_ERROR = 'SIGNUP_HANDLE_ERROR'\n","import {START_SIGNUP, SIGNUP_SUCCESSFULL, SIGNUP_HANDLE_ERROR, SIGNUP_FAIL} from '../constants/signup'\n\nconst initialState = {\n    startSignup: false,\n    signupSuccessfull: false,\n    error: null\n}\n\nexport const signupData = (state = initialState, action) => {\n    switch(action.type){\n    case START_SIGNUP:\n        return {\n            ...state,\n            startSignup: true\n        }\n    case SIGNUP_SUCCESSFULL:\n        return {\n            ...state,\n            startSignup: false,\n            signupSuccessfull: true\n        }\n    case SIGNUP_FAIL:\n        return {\n            ...state,\n            startSignup: false,\n            error: action.err\n        }\n    case SIGNUP_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const REQUEST_LIST_USER = 'REQUEST_LIST_USER'\nexport const LIST_USER_FETCH_SUCCESSFULL = 'LIST_USER_FETCH_SUCCESSFULL'\nexport const LIST_USER_FETCH_FAIL = 'LIST_USER_FETCH_FAIL'\nexport const LIST_USER_HANDLE_ERROR = 'LIST_USER_HANDLE_ERROR'\n","import {REQUEST_LIST_USER, LIST_USER_FETCH_FAIL, LIST_USER_FETCH_SUCCESSFULL, LIST_USER_HANDLE_ERROR} from '../constants/list_user'\n\nconst initialState = {\n    isLoading: false,\n    users: [],\n    error: null\n}\n\nexport const userData = (state = initialState, action) => {\n    switch(action.type){\n    case REQUEST_LIST_USER:\n        return {\n            ...state,\n            isLoading: true\n        }\n    case LIST_USER_FETCH_SUCCESSFULL:\n        return {\n            ...state,\n            isLoading: false,\n            users: action.users\n        }\n    case LIST_USER_FETCH_FAIL:\n        return {\n            ...state,\n            isLoading: false,\n            error: action.error\n        }\n    case LIST_USER_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const REQUEST_LIST_CHAT = 'REQUEST_LIST_CHAT'\nexport const LIST_CHAT_FETCH_SUCCESSFULL = 'LIST_CHAT_FETCH_SUCCESSFULL'\nexport const LIST_CHAT_FETCH_FAIL = 'LIST_CHAT_FETCH_FAIL'\nexport const LIST_CHAT_HANDLE_ERROR = 'LIST_CHAT_HANDLE_ERROR'\n","import {REQUEST_LIST_CHAT, LIST_CHAT_FETCH_FAIL, LIST_CHAT_FETCH_SUCCESSFULL, LIST_CHAT_HANDLE_ERROR} from '../constants/list_chat'\n\nconst initialState = {\n    isLoading: false,\n    chats: [],\n    error: null\n}\n\nexport const chatData = (state = initialState, action) => {\n    switch(action.type){\n    case REQUEST_LIST_CHAT:\n        return {\n            ...state,\n            isLoading: true\n        }\n    case LIST_CHAT_FETCH_SUCCESSFULL:\n        return {\n            ...state,\n            isLoading: false,\n            chats: action.chats\n        }\n    case LIST_CHAT_FETCH_FAIL:\n        return {\n            ...state,\n            isLoading: false,\n            error: action.error\n        }\n    case LIST_CHAT_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","import { combineReducers } from \"redux\";\nimport {loginData} from \"../screens/auth/reducers/signin\"\nimport {signupData} from \"../screens/auth/reducers/signup\"\n\n\nimport {userData} from \"../screens/list_users/reducers/list_user\"\n\nimport {chatData} from \"../screens/chat/reducers/list_chat\"\n\nexport default combineReducers({\n    loginData,\n    signupData,\n\n    userData,\n    chatData,\n});","import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers\";\n\nlet logger = createLogger({\n    timestamps: true,\n    duration: true\n});\n\nconst myStore = createStore(\n    rootReducer,\n    compose(applyMiddleware(logger, thunk))\n);\n\nexport default myStore;","import {getToken} from '../api/UserAPI'\n\nexport function getHeaders(token) {\n    var headers = new Headers({\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Accept\": \"application/json\",\n    })\n  \n    token = token || getToken()\n    if(token)\n        headers.append('x-access-token', token)\n    return headers\n}","import config from '../config'\nimport {getHeaders} from '../utils/common'\nimport jwtDecode from 'jwt-decode';\n\nconst KEY_TOKEN = 'token';\n\nexport function getToken(){\n    return sessionStorage.getItem(KEY_TOKEN);\n}\n\nexport function setToken(token) {\n    sessionStorage.setItem(KEY_TOKEN, token);\n}\n\nexport function login(username, password) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users/login', {\n            method: \"POST\",\n            body: JSON.stringify({username, password}),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            let token = resJSON.result.token\n\n            localStorage.setItem('userID', resJSON.result.id);\n            localStorage.setItem('userToken', resJSON.result.token);\n\n            setToken(token)\n            resolve(token)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function signup(username, password, full_name, phone) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users', {\n            method: \"POST\",\n            body: JSON.stringify({\n                user: {username, password, full_name, phone}\n            }),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function findAllUsers() {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users', {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function findByID(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users/'+userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function isLoggedIn() {\n    const tok=getToken();\n    return !!tok;\n}\n\nexport function signout() {\n    sessionStorage.removeItem(KEY_TOKEN);\n}\n\nexport function requireAuth(nextState, replace) {\n    if (!isLoggedIn()) {\n        replace({pathname: '/'});\n    }\n}\n\nexport function getTokenData() {\n    let token = sessionStorage.getItem(KEY_TOKEN);\n    return jwtDecode(token)\n}","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isLoggedIn} from '../api/UserAPI';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    isLoggedIn() ? (\n      <Component {...props}/>\n    ) : (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n);\n\nexport default PrivateRoute;\n","import {login as loginAPI} from '../../../api/UserAPI'\nimport {START_LOGIN, LOGIN_SUCCESSFULL, LOGIN_FAIL, LOGIN_HANDLE_ERROR} from '../constants/signin.js'\n\nexport function login(username, password){\n    return (dispatch)=>{\n        dispatch(startLogin())\n\n        loginAPI(username, password)\n        .then(token=>{\n            dispatch(loginSuccessfull())\n        })\n        .catch(err=>dispatch(loginFail(err)))\n    }\n}\n\nexport function startLogin(){\n    return {\n        type: START_LOGIN,\n    }\n}\n\nexport function loginSuccessfull(){\n    return {\n        type: LOGIN_SUCCESSFULL,\n    }\n}\n\nexport function loginFail(err){\n    return {\n        type: LOGIN_FAIL,\n        err: err\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LOGIN_HANDLE_ERROR,\n    }\n}","import {signup as signupAPI} from '../../../api/UserAPI'\nimport {START_SIGNUP, SIGNUP_SUCCESSFULL, SIGNUP_FAIL, SIGNUP_HANDLE_ERROR} from '../constants/signup'\n\nexport function signup(username, password, full_name, phone){\n    return (dispatch)=>{\n        dispatch(startSignup())\n\n        signupAPI(username, password, full_name, phone)\n        .then(user=>{\n            dispatch(signupSuccessfull())\n        })\n        .catch(err=>dispatch(signupFail(err)))\n    }\n}\n\nexport function startSignup(){\n    return {\n        type: START_SIGNUP,\n    }\n}\n\nexport function signupSuccessfull(){\n    return {\n        type: SIGNUP_SUCCESSFULL,\n    }\n}\n\nexport function signupFail(err){\n    return {\n        type: SIGNUP_FAIL,\n        err: err\n    }\n}\n\nexport function handeError(){\n    return {\n        type: SIGNUP_HANDLE_ERROR,\n    }\n}","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport default class Alert extends Component {\n    state = {\n        open: true\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n\n        if (this.props.onClose) {\n            this.props.onClose()\n        }\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                TransitionComponent={Transition}\n                onClose={this.handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {this.props.title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {this.props.children}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport {login, handeError as handeErrorLogin} from './actions/signin'\nimport {signup, handeError as handeErrorSignup} from './actions/signup'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Alert from '../../components/Alert'\n\nlet styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: \"100vh\",\n        backgroundColor: \"#E1E6E9\"\n    },\n    paper: {\n        width: 330,\n        padding: \"20px\"\n    },\n    btnSignIn: {\n        width: \"100%\",\n        margin: \"10px 0\",\n    },\n    hr: {\n        backgroundColor: \"#e0e0e0\",\n        height: 1,\n        border: 0,\n    },\n    textRight: {\n        textAlign: \"right\"\n    }\n}\n\nclass Auth extends Component {\n    state = {\n        tab: 1,\n        username: \"\",\n        phone: \"\",\n        password: \"\",\n        password1: \"\",\n        password2: \"\",\n        full_name: \"\",\n    }\n\n    constructor(props){\n        super(props)\n\n        this.onClickLogin = this.onClickLogin.bind(this)\n        this.onClickSignup = this.onClickSignup.bind(this)\n    }\n\n    onClickLogin(){\n        let {username, password} = this.state\n\n        if (!username) {\n            return alert(\"please fill your username\")\n        }\n\n        if (!password) {\n            return alert(\"please fill your password\")\n        }\n\n        this.props.login(username, password)\n    }\n\n    onClickSignup(){\n        let {username, password1, password2, full_name, phone} = this.state\n\n        if (!username) {\n            return alert(\"please fill your username\")\n        }\n\n        if (password1 !== password2) {\n            return alert(\"password not match\")\n        }\n\n        if (!password1) {\n            return alert(\"please fill your password\")\n        }\n\n        if (!phone) {\n            return alert(\"please fill your phone\")\n        }\n\n        this.props.signup(username, password1, full_name, phone)\n    }\n\n    render() {\n        if(this.props.signupData.signupSuccessfull && this.state.tab===2)\n            this.setState({tab: 1})\n\n        if(this.props.loginData.loginSuccessfull)\n            this.props.history.push(\"/app\")\n\n        return (\n            <div style={styles.container}>\n            {\n                this.state.tab === 1 && (\n                    <Paper elevation={1} style={styles.paper}>\n                        <Typography variant=\"h5\" component=\"h3\" align=\"center\">Sign in</Typography>\n                        <TextField\n                            id=\"username\"\n                            label=\"Your username\"\n                            value={this.state.username}\n                            onChange={e=>this.setState({username: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"password\"\n                            label=\"Your password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={e=>this.setState({password: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <Typography variant=\"body1\" component=\"p\" align=\"right\" color=\"primary\">Forgot Password?</Typography>\n                        <Button variant=\"contained\" color=\"primary\" style={styles.btnSignIn} disabled={this.props.loginData.startLogin && !this.props.loginData.loginSuccessfull} onClick={this.onClickLogin}>\n                            Sign in\n                        </Button>\n                        <hr style={styles.hr}/>\n                        <div style={styles.textRight}>\n                            <Typography variant=\"body1\" component=\"span\" align=\"right\" style={{display: \"inline-block\"}}>Not a user?</Typography>\n                            <Typography variant=\"body1\" component=\"span\" align=\"right\" color=\"primary\" style={{display: \"inline-block\", cursor: \"pointer\"}} onClick={()=>this.setState({tab: 2})}>Sign Up</Typography>\n                        </div>\n                    </Paper>\n                )\n            }\n            {\n                this.state.tab === 2 && (\n                    <Paper elevation={1} style={styles.paper}>\n                        <Typography variant=\"h5\" component=\"h3\" align=\"center\">Sign up</Typography>\n                        <TextField\n                            id=\"full_name\"\n                            label=\"Your full name\"\n                            value={this.state.full_name}\n                            onChange={e=>this.setState({full_name: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"phone\"\n                            label=\"Your phone\"\n                            value={this.state.phone}\n                            onChange={e=>this.setState({phone: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"username\"\n                            label=\"Your username\"\n                            value={this.state.username}\n                            onChange={e=>this.setState({username: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"password1\"\n                            label=\"Your password\"\n                            type=\"password\"\n                            value={this.state.password1}\n                            onChange={e=>this.setState({password1: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"password2\"\n                            label=\"Retype your password\"\n                            type=\"password\"\n                            value={this.state.password2}\n                            onChange={e=>this.setState({password2: e.target.value})}\n                            margin=\"normal\"\n                            fullWidth\n                        />\n                        <Button variant=\"contained\" color=\"primary\" style={styles.btnSignIn} disabled={this.props.signupData.startSignup && !this.props.signupData.signupSuccessfull} onClick={this.onClickSignup}>\n                            Sign up\n                        </Button>\n                        <hr style={styles.hr}/>\n                        <div style={styles.textRight}>\n                            <Typography variant=\"body1\" component=\"span\" align=\"right\" style={{display: \"inline-block\"}}>Have an account?</Typography>\n                            <Typography variant=\"body1\" component=\"span\" align=\"right\" color=\"primary\" style={{display: \"inline-block\", cursor: \"pointer\"}} onClick={()=>this.setState({tab: 1})}>Sign In</Typography>\n                        </div>\n                    </Paper>\n                )\n            }\n            {\n                !!this.props.loginData.error && (\n                    <Alert title=\"Error\" onClose={this.props.handeErrorLogin}>{this.props.loginData.error}</Alert>\n                )\n            }\n            {\n                !!this.props.signupData.error && (\n                    <Alert title=\"Error\" onClose={this.props.handeErrorSignup}>{this.props.signupData.error.toString()}</Alert>\n                )\n            }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginData,\n    signupData: state.signupData,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    login: (username, password)=>dispatch(login(username, password)),\n    signup: (username, password, full_name)=>dispatch(signup(username, password, full_name)),\n    handeErrorLogin: ()=>dispatch(handeErrorLogin()),\n    handeErrorSignup: ()=>dispatch(handeErrorSignup()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import {REQUEST_LIST_USER, LIST_USER_FETCH_SUCCESSFULL, LIST_USER_FETCH_FAIL, LIST_USER_HANDLE_ERROR} from '../constants/list_user'\nimport {findAllUsers} from '../../../api/UserAPI'\n\nexport function requestListUser(){\n    return {\n        type: REQUEST_LIST_USER,\n    }\n}\n\nexport function fetchSuccessfully(users){\n    return {\n        type: LIST_USER_FETCH_SUCCESSFULL,\n        users\n    }\n}\n\nexport function fetchError(error){\n    return {\n        type: LIST_USER_FETCH_FAIL,\n        error\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LIST_USER_HANDLE_ERROR,\n    }\n}\n\nexport function getListUsers(){\n    return (dispatch)=>{\n        dispatch(requestListUser())\n\n        findAllUsers()\n        .then(users=>{\n            dispatch(fetchSuccessfully(users))\n        })\n        .catch(err=>dispatch(fetchError(err)))\n    }\n}","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport {getListUsers} from './actions/list_user'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass ListUser extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.props.getListUsers()\n    }\n\n    render() {\n        const { classes, userData } = this.props;\n        return (\n            <div className={classes.root}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#</TableCell>\n                            <TableCell>Full name</TableCell>\n                            <TableCell>Username</TableCell>\n                            <TableCell>Date created</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            userData.users.map((user, i)=>(\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">{i}</TableCell>\n                                    <TableCell>{user.full_name}</TableCell>\n                                    <TableCell>{user.username}</TableCell>\n                                    <TableCell>{new Date(user.date_created).toDateString()}</TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userData: state.userData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getListUsers: ()=>dispatch(getListUsers()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ListUser))","import config from '../config'\nimport {getHeaders} from '../utils/common'\n\nexport function getChatBySender(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/sender/'+ userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function getChatByReceiver(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/receiver/'+ userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function getAllChat() {\n\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats', {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n            localStorage.setItem('chatData', resJSON.result);\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function createChat(sender, receiver, content) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats', {\n            method: \"POST\",\n            headers: getHeaders(),\n            body: JSON.stringify({\n                chat: {sender, receiver, content}\n            }),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function deleteChat(chatID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/'+chatID, {\n            method: \"DELETE\",\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function updateChat(chat) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/' + chat._id, {\n            method: \"PUT\",\n            headers: getHeaders(),\n            body: JSON.stringify({\n                chat: {content: chat.content}\n            }),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}","import {REQUEST_LIST_CHAT, LIST_CHAT_FETCH_SUCCESSFULL, LIST_CHAT_FETCH_FAIL, LIST_CHAT_HANDLE_ERROR} from '../constants/list_chat'\nimport {getAllChat} from '../../../api/ChatAPI'\n\nexport function requestListChat(){\n    return {\n        type: REQUEST_LIST_CHAT,\n    }\n}\n\nexport function fetchSuccessfully(chats){\n    return {\n        type: LIST_CHAT_FETCH_SUCCESSFULL,\n        chats\n    }\n}\n\nexport function fetchError(error){\n    return {\n        type: LIST_CHAT_FETCH_FAIL,\n        error\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LIST_CHAT_HANDLE_ERROR,\n    }\n}\n\nexport function getListChats(){\n    return (dispatch)=>{\n        dispatch(requestListChat())\n\n        getAllChat()\n        .then(chats=>{\n            dispatch(fetchSuccessfully(chats))\n        })\n        .catch(err=>dispatch(fetchError(err)))\n    }\n}","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport io from 'socket.io-client';\nimport {getListChats} from './actions/list_chat'\nimport './chat.css'\nimport {getHeaders} from '../../utils/common'\nimport {getAllChat} from '../../api/ChatAPI'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass Chat extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.props.getListChats()\n        this.socket = null;\n        this.state = {\n            status: false,\n            text: \"\",\n            chatsData: [],\n            seen: '',\n        }\n        getAllChat().then((res)=>{\n            this.setState({chatsData: res})\n            if(res){\n                var dataTemp= [];\n                res.map(m=>{\n                    if(m.sender == localStorage.getItem('userID') && m.receiver == this.props.match.params.userID) dataTemp.push(m)\n                    if(m.receiver == localStorage.getItem('userID') && m.sender == this.props.match.params.userID) dataTemp.push(m)\n                })\n                if(dataTemp[0]){\n                    if(dataTemp[dataTemp.length-1].isSeen && dataTemp[dataTemp.length-1].sender == localStorage.getItem('userID')) {this.setState({seen: 'SEEN'})}\n                    else {this.setState({seen: ''})}\n                }\n            }\n        })\n    }\n\n    onFocus = () => {\n            let token = localStorage.getItem('userToken')\n            this.socket = io(\"/chat\", {\"query\":{\"token\":token}});\n            getAllChat().then((res)=>{\n                this.setState({chatsData: res})\n                let dataTemp = this.state.chatsData\n\n                var lastIDChat;\n                dataTemp.map(m=>{\n                    if(m.sender == this.props.match.params.userID && m.receiver == localStorage.getItem('userID')) lastIDChat = m._id\n                })\n\n                if(lastIDChat){\n                    this.socket.emit(\"isSeen\", {chat_id : lastIDChat});\n                }\n                console.log(\"asdasd\", lastIDChat)\n            })\n    }\n\n    onChange(e) {\n        this.setState({text: e.target.value});\n\n      }\n    \n    onSubmit(e) {\n        if(this.state.text){\n            this.socket.emit(\"newMessage\", {content : this.state.text, receiver: this.props.match.params.userID});\n            var chat = {sender:localStorage.getItem('userID'), receiver:this.props.match.params.userID, content:this.state.text, _created:Date.now()};\n            this.state.chatsData.push(chat)\n            this.setState({text: \"\", seen: \"\"});\n            e.preventDefault();\n        }\n      }\n\n    componentWillMount() {\n        let token = localStorage.getItem('userToken')\n        this.socket = io(\"/chat\", {\"query\":{\"token\":token}});\n        this.socket.on('newMessage', (response) => {\n            this.setState({chatsData: response})\n        }); //hear newMessage\n        this.socket.on('isSeen', (response) => {\n            console.log(\"sda\",response)\n            var dataTemp= [];\n            response.map(m=>{\n                if(m.sender ==localStorage.getItem('userID') && m.receiver == this.props.match.params.userID) dataTemp.push(m)\n                if(m.receiver == localStorage.getItem('userID') && m.sender == this.props.match.params.userID) dataTemp.push(m)\n            })\n            if(dataTemp[0]){\n                if(dataTemp[dataTemp.length-1].isSeen && dataTemp[dataTemp.length-1].sender ==localStorage.getItem('userID')) {this.setState({seen: 'SEEN'})}\n                else {this.setState({seen: ''})}\n            }\n        }); //isSeen\n    }\n\n    render() {\n        const { classes,  chatData } = this.props;\n        return (\n            <div className={classes.root}>\n            <ul className=\"Messages-list\">\n                {   \n                    this.state.chatsData.map(m => {\n                    if((m.receiver == this.props.match.params.userID && m.sender == localStorage.getItem('userID'))) {return this.renderMessage(m.sender, m.content, m._created)}\n                    if((m.receiver == localStorage.getItem('userID') && m.sender == this.props.match.params.userID)) {return this.renderMessage(m.sender, m.content, m._created)}\n                })}\n            </ul>\n            <div className=\"username\" style={{marginLeft: 1100}}>\n                {this.state.seen}\n              </div>\n                <div className=\"Input\">\n                    <form onSubmit={e => this.onSubmit(e)}>\n                    <input\n                        onFocus={ this.onFocus } \n                        onChange={e => this.onChange(e)}\n                        value={this.state.text}\n                        type=\"text\"\n                        placeholder=\"Enter your message and press ENTER\"\n                        autofocus=\"true\"\n                    />\n                    <button>Send</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n    renderMessage(userID, content, _created) {\n        const messageFromMe = userID === localStorage.getItem('userID');\n        const className = messageFromMe ?\n        \"Messages-message currentMember\" : \"Messages-message\";\n        return (\n          <li className={className}>\n          <span\n            className=\"avatar\"\n            style={{backgroundColor: \"#189eff\"}}\n          />\n            <div className=\"Message-content\">\n              <div className=\"username\">\n                {_created}\n              </div>\n              <div className=\"text\">{content}</div>\n            </div>\n          </li>\n        );\n      }\n}\n\nconst mapStateToProps = (state) => ({\n    chatData: state.chatData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getListChats: ()=>dispatch(getListChats()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Chat))","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {signout} from '../../api/UserAPI'\nimport ListUser from '../list_users/ListUser';\nimport Chat from '../chat/chat';\n\n\nimport {getListUsers} from '../list_users/actions/list_user'\n\nlet styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    appBarTitle: {\n        flexGrow: 1,\n    },\n    appBarMenuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n})\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props)\n\n        this.onClickSignout = this.onClickSignout.bind(this);\n\n        this.props.getListUsers();\n    }\n\n    componentDidMount(){\n\n    }\n\n    onClickSignout(){\n        signout()\n        window.location.reload()\n    }\n\n\n    render() {\n        const { classes, userData, chatData } = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton color=\"inherit\" aria-label=\"Menu\" className={classes.appBarMenuButton}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.appBarTitle}>\n                            Chat Realtime\n                        </Typography>\n                        <Button color=\"inherit\" onClick={this.onClickSignout}>Sign out</Button>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                >\n\n                <div className={classes.toolbar} />\n                    <List\n                        component=\"nav\"\n                        subheader={<ListSubheader component=\"div\">Chat With Friends</ListSubheader>}\n                    >\n                    {\n                            userData.users.map((user, i)=>{\n                                if(user._id != localStorage.getItem('userID')){\n                                    return (<ListItem button onClick={()=>this.props.history.push({pathname: '/app/chat/'+user._id})}>\n                                    <ListItemText primary={user.full_name} />\n                                </ListItem>);\n                                }\n                            })\n                    }\n                    </List>\n                <Divider />\n                        \n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        <Route exact path=\"/app\" component={ListUser}/>\n                        <Route exact path=\"/app/chat/:userID\" render={props => <Chat {...props} key={props.match.params.userID || 'empty'} /> }/>\n                    </Switch>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userData: state.userData,\n    chatData: state.chatData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getListUsers: ()=>dispatch(getListUsers()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard))","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\n\nimport Auth from './screens/auth/Auth'\nimport Dashboard from './screens/dashboard/Dashboard'\n\nconst Root = () => (\n    <Router>\n        <div>\n            <Route exact path=\"/\" component={Auth} />\n            <PrivateRoute path=\"/app\" component={Dashboard} />\n        </div>\n    </Router>\n)\n\nexport default Root;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport myStore from \"./myStore\";\nimport Root from \"./router\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={myStore}>\n        <Root />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}